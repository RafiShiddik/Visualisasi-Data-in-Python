{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNHXfr+LqbcTyM7GwheonkG",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/RafiShiddik/Visualisasi-Data-in-Python/blob/main/latihan%20soal%20study%20case%20pada%20data\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "FF-0ss4tS6ag"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "import scipy.stats as st\n",
        "df = pd.read_csv('train.csv')"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "?st.ttest_ind"
      ],
      "metadata": {
        "id": "D_pP6uMATqKq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "smws9LDGVL0U",
        "outputId": "be3e2e8e-f94f-4afd-f196-fde6b1b5db88"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 83293 entries, 0 to 83292\n",
            "Data columns (total 33 columns):\n",
            " #   Column                          Non-Null Count  Dtype  \n",
            "---  ------                          --------------  -----  \n",
            " 0   hotel                           83293 non-null  object \n",
            " 1   is_canceled                     83293 non-null  int64  \n",
            " 2   lead_time                       83293 non-null  int64  \n",
            " 3   arrival_date_year               83293 non-null  int64  \n",
            " 4   arrival_date_month              83293 non-null  object \n",
            " 5   arrival_date_week_number        83293 non-null  int64  \n",
            " 6   arrival_date_day_of_month       83293 non-null  int64  \n",
            " 7   stays_in_weekend_nights         83293 non-null  int64  \n",
            " 8   stays_in_week_nights            83293 non-null  int64  \n",
            " 9   adults                          83293 non-null  int64  \n",
            " 10  children                        83290 non-null  float64\n",
            " 11  babies                          83293 non-null  int64  \n",
            " 12  meal                            83293 non-null  object \n",
            " 13  country                         82947 non-null  object \n",
            " 14  market_segment                  83293 non-null  object \n",
            " 15  distribution_channel            83293 non-null  object \n",
            " 16  is_repeated_guest               83293 non-null  int64  \n",
            " 17  previous_cancellations          83293 non-null  int64  \n",
            " 18  previous_bookings_not_canceled  83293 non-null  int64  \n",
            " 19  reserved_room_type              83293 non-null  object \n",
            " 20  assigned_room_type              83293 non-null  object \n",
            " 21  booking_changes                 83293 non-null  int64  \n",
            " 22  deposit_type                    83293 non-null  object \n",
            " 23  agent                           71889 non-null  float64\n",
            " 24  company                         4734 non-null   float64\n",
            " 25  days_in_waiting_list            83293 non-null  int64  \n",
            " 26  customer_type                   83293 non-null  object \n",
            " 27  adr                             83293 non-null  float64\n",
            " 28  required_car_parking_spaces     83293 non-null  int64  \n",
            " 29  total_of_special_requests       83293 non-null  int64  \n",
            " 30  reservation_status              83293 non-null  object \n",
            " 31  reservation_status_date         83293 non-null  object \n",
            " 32  bookingID                       83293 non-null  int64  \n",
            "dtypes: float64(4), int64(17), object(12)\n",
            "memory usage: 21.0+ MB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "nums = df.select_dtypes(include=['float64', 'int64']).columns.tolist()"
      ],
      "metadata": {
        "id": "w-65RbWltCS9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "features = nums\n",
        "plt.figure(figsize=(10,5))\n",
        "for i in range(0,len(features)):\n",
        "  plt.subplot(1,len(features),i+1)\n",
        "  sns.boxplot(y=df[nums[i]], color='skyblue')\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 481
        },
        "id": "anq0mxq0Va7W",
        "outputId": "bbd4de23-e7dd-420e-a2b0-0fd1beb59ad5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-22-ed1938b04692>:6: UserWarning: Tight layout not applied. tight_layout cannot make Axes width small enough to accommodate all Axes decorations\n",
            "  plt.tight_layout()\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x500 with 21 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.figure(figsize=(10, 6))\n",
        "for i in range(len(nums)):\n",
        "    plt.subplot(2, 4, i + 1)  # Membuat subplot dengan 2 baris dan 4 kolom\n",
        "    sns.histplot(df[nums[i]], kde=True, color='skyblue')  # Menggunakan histplot dengan KDE\n",
        "    plt.xlabel(nums[i])\n",
        "    plt.title(f'Distribusi {nums[i]}')\n",
        "\n",
        "plt.tight_layout()  # Memperbaiki penulisan\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 903
        },
        "id": "ZmuLtIZWweXr",
        "outputId": "61280915-3f67-4175-e308-1914be9b151e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "error",
          "ename": "ValueError",
          "evalue": "num must be an integer with 1 <= num <= 8, not 9",
          "traceback": [
            "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
            "\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)",
            "\u001b[0;32m<ipython-input-25-20ff5c14dcc2>\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfigure\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m10\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m6\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;32mfor\u001b[0m \u001b[0mi\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mrange\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mlen\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnums\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msubplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m4\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mi\u001b[0m \u001b[0;34m+\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# Membuat subplot dengan 2 baris dan 4 kolom\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m     \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhistplot\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdf\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mnums\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mkde\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mTrue\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcolor\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'skyblue'\u001b[0m\u001b[0;34m)\u001b[0m  \u001b[0;31m# Menggunakan histplot dengan KDE\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m     \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mxlabel\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnums\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mi\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/matplotlib/pyplot.py\u001b[0m in \u001b[0;36msubplot\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m   1548\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1549\u001b[0m     \u001b[0;31m# First, search for an existing subplot with a matching spec.\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1550\u001b[0;31m     \u001b[0mkey\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSubplotSpec\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_from_subplot_args\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfig\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1551\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1552\u001b[0m     \u001b[0;32mfor\u001b[0m \u001b[0max\u001b[0m \u001b[0;32min\u001b[0m \u001b[0mfig\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0maxes\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;32m/usr/local/lib/python3.11/dist-packages/matplotlib/gridspec.py\u001b[0m in \u001b[0;36m_from_subplot_args\u001b[0;34m(figure, args)\u001b[0m\n\u001b[1;32m    587\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    588\u001b[0m             \u001b[0;32mif\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0misinstance\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnum\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mIntegral\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mnum\u001b[0m \u001b[0;34m<\u001b[0m \u001b[0;36m1\u001b[0m \u001b[0;32mor\u001b[0m \u001b[0mnum\u001b[0m \u001b[0;34m>\u001b[0m \u001b[0mrows\u001b[0m\u001b[0;34m*\u001b[0m\u001b[0mcols\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 589\u001b[0;31m                 raise ValueError(\n\u001b[0m\u001b[1;32m    590\u001b[0m                     \u001b[0;34mf\"num must be an integer with 1 <= num <= {rows*cols}, \"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    591\u001b[0m                     \u001b[0;34mf\"not {num!r}\"\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
            "\u001b[0;31mValueError\u001b[0m: num must be an integer with 1 <= num <= 8, not 9"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 8 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df [['bookingID', 'reservation_status_date']]"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "O1rZ4IVfVWYj",
        "outputId": "69c1819e-7bf3-4a21-ff59-1732ccb6af8f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       bookingID reservation_status_date\n",
              "0              1              2019-01-14\n",
              "1              2              2017-10-21\n",
              "2              3              2018-11-25\n",
              "3              4              2018-10-18\n",
              "4              5              2017-08-24\n",
              "...          ...                     ...\n",
              "83288      83289              2018-10-27\n",
              "83289      83290              2017-09-18\n",
              "83290      83291              2019-07-05\n",
              "83291      83292              2018-08-06\n",
              "83292      83293              2018-10-25\n",
              "\n",
              "[83293 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-59238089-fe77-4862-b12f-b1920a5e8fc3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>bookingID</th>\n",
              "      <th>reservation_status_date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "      <td>2019-01-14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2</td>\n",
              "      <td>2017-10-21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3</td>\n",
              "      <td>2018-11-25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>2018-10-18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>5</td>\n",
              "      <td>2017-08-24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>83288</th>\n",
              "      <td>83289</td>\n",
              "      <td>2018-10-27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>83289</th>\n",
              "      <td>83290</td>\n",
              "      <td>2017-09-18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>83290</th>\n",
              "      <td>83291</td>\n",
              "      <td>2019-07-05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>83291</th>\n",
              "      <td>83292</td>\n",
              "      <td>2018-08-06</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>83292</th>\n",
              "      <td>83293</td>\n",
              "      <td>2018-10-25</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>83293 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-59238089-fe77-4862-b12f-b1920a5e8fc3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-59238089-fe77-4862-b12f-b1920a5e8fc3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-59238089-fe77-4862-b12f-b1920a5e8fc3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-88db2446-37c9-4829-8bde-4c362af5a8a2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-88db2446-37c9-4829-8bde-4c362af5a8a2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-88db2446-37c9-4829-8bde-4c362af5a8a2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df [['bookingID', 'reservation_status_date']]\",\n  \"rows\": 83293,\n  \"fields\": [\n    {\n      \"column\": \"bookingID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24044,\n        \"min\": 1,\n        \"max\": 83293,\n        \"num_unique_values\": 83293,\n        \"samples\": [\n          3118,\n          41008,\n          629\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reservation_status_date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 914,\n        \"samples\": [\n          \"2019-04-24\",\n          \"2017-01-02\",\n          \"2017-12-04\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "id": "-X0KytxRWKYz",
        "outputId": "749217a1-6bf4-4318-85c9-185a4fae41f1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "        is_canceled     lead_time  arrival_date_year  \\\n",
              "count  83293.000000  83293.000000       83293.000000   \n",
              "mean       0.369503    103.914230        2018.156808   \n",
              "std        0.482673    106.874124           0.706656   \n",
              "min        0.000000      0.000000        2017.000000   \n",
              "25%        0.000000     18.000000        2018.000000   \n",
              "50%        0.000000     69.000000        2018.000000   \n",
              "75%        1.000000    160.000000        2019.000000   \n",
              "max        1.000000    737.000000        2019.000000   \n",
              "\n",
              "       arrival_date_week_number  arrival_date_day_of_month  \\\n",
              "count              83293.000000               83293.000000   \n",
              "mean                  27.164023                  15.786116   \n",
              "std                   13.623752                   8.775931   \n",
              "min                    1.000000                   1.000000   \n",
              "25%                   16.000000                   8.000000   \n",
              "50%                   27.000000                  16.000000   \n",
              "75%                   38.000000                  23.000000   \n",
              "max                   53.000000                  31.000000   \n",
              "\n",
              "       stays_in_weekend_nights  stays_in_week_nights        adults  \\\n",
              "count             83293.000000          83293.000000  83293.000000   \n",
              "mean                  0.930390              2.503812      1.854466   \n",
              "std                   1.004196              1.924511      0.606139   \n",
              "min                   0.000000              0.000000      0.000000   \n",
              "25%                   0.000000              1.000000      2.000000   \n",
              "50%                   1.000000              2.000000      2.000000   \n",
              "75%                   2.000000              3.000000      2.000000   \n",
              "max                  19.000000             50.000000     55.000000   \n",
              "\n",
              "           children        babies  ...  previous_cancellations  \\\n",
              "count  83290.000000  83293.000000  ...            83293.000000   \n",
              "mean       0.103614      0.008032  ...                0.086994   \n",
              "std        0.398821      0.100641  ...                0.862988   \n",
              "min        0.000000      0.000000  ...                0.000000   \n",
              "25%        0.000000      0.000000  ...                0.000000   \n",
              "50%        0.000000      0.000000  ...                0.000000   \n",
              "75%        0.000000      0.000000  ...                0.000000   \n",
              "max       10.000000     10.000000  ...               26.000000   \n",
              "\n",
              "       previous_bookings_not_canceled  booking_changes         agent  \\\n",
              "count                    83293.000000     83293.000000  71889.000000   \n",
              "mean                         0.141765         0.223068     86.867282   \n",
              "std                          1.554390         0.656237    110.875605   \n",
              "min                          0.000000         0.000000      1.000000   \n",
              "25%                          0.000000         0.000000      9.000000   \n",
              "50%                          0.000000         0.000000     14.000000   \n",
              "75%                          0.000000         0.000000    229.000000   \n",
              "max                         70.000000        21.000000    535.000000   \n",
              "\n",
              "           company  days_in_waiting_list           adr  \\\n",
              "count  4734.000000          83293.000000  83293.000000   \n",
              "mean    190.003802              2.352238    101.724373   \n",
              "std     131.969152             17.820652     48.082552   \n",
              "min       6.000000              0.000000      0.000000   \n",
              "25%      62.000000              0.000000     69.530000   \n",
              "50%     183.000000              0.000000     94.500000   \n",
              "75%     270.000000              0.000000    126.000000   \n",
              "max     543.000000            391.000000    508.000000   \n",
              "\n",
              "       required_car_parking_spaces  total_of_special_requests     bookingID  \n",
              "count                 83293.000000               83293.000000  83293.000000  \n",
              "mean                      0.061818                   0.571945  41647.000000  \n",
              "std                       0.245027                   0.793742  24044.762323  \n",
              "min                       0.000000                   0.000000      1.000000  \n",
              "25%                       0.000000                   0.000000  20824.000000  \n",
              "50%                       0.000000                   0.000000  41647.000000  \n",
              "75%                       0.000000                   1.000000  62470.000000  \n",
              "max                       8.000000                   5.000000  83293.000000  \n",
              "\n",
              "[8 rows x 21 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-cafb02c4-28d1-4ed1-b078-5dc0ae11cbcf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>is_canceled</th>\n",
              "      <th>lead_time</th>\n",
              "      <th>arrival_date_year</th>\n",
              "      <th>arrival_date_week_number</th>\n",
              "      <th>arrival_date_day_of_month</th>\n",
              "      <th>stays_in_weekend_nights</th>\n",
              "      <th>stays_in_week_nights</th>\n",
              "      <th>adults</th>\n",
              "      <th>children</th>\n",
              "      <th>babies</th>\n",
              "      <th>...</th>\n",
              "      <th>previous_cancellations</th>\n",
              "      <th>previous_bookings_not_canceled</th>\n",
              "      <th>booking_changes</th>\n",
              "      <th>agent</th>\n",
              "      <th>company</th>\n",
              "      <th>days_in_waiting_list</th>\n",
              "      <th>adr</th>\n",
              "      <th>required_car_parking_spaces</th>\n",
              "      <th>total_of_special_requests</th>\n",
              "      <th>bookingID</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>83293.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "      <td>83290.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>83293.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "      <td>71889.000000</td>\n",
              "      <td>4734.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>0.369503</td>\n",
              "      <td>103.914230</td>\n",
              "      <td>2018.156808</td>\n",
              "      <td>27.164023</td>\n",
              "      <td>15.786116</td>\n",
              "      <td>0.930390</td>\n",
              "      <td>2.503812</td>\n",
              "      <td>1.854466</td>\n",
              "      <td>0.103614</td>\n",
              "      <td>0.008032</td>\n",
              "      <td>...</td>\n",
              "      <td>0.086994</td>\n",
              "      <td>0.141765</td>\n",
              "      <td>0.223068</td>\n",
              "      <td>86.867282</td>\n",
              "      <td>190.003802</td>\n",
              "      <td>2.352238</td>\n",
              "      <td>101.724373</td>\n",
              "      <td>0.061818</td>\n",
              "      <td>0.571945</td>\n",
              "      <td>41647.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.482673</td>\n",
              "      <td>106.874124</td>\n",
              "      <td>0.706656</td>\n",
              "      <td>13.623752</td>\n",
              "      <td>8.775931</td>\n",
              "      <td>1.004196</td>\n",
              "      <td>1.924511</td>\n",
              "      <td>0.606139</td>\n",
              "      <td>0.398821</td>\n",
              "      <td>0.100641</td>\n",
              "      <td>...</td>\n",
              "      <td>0.862988</td>\n",
              "      <td>1.554390</td>\n",
              "      <td>0.656237</td>\n",
              "      <td>110.875605</td>\n",
              "      <td>131.969152</td>\n",
              "      <td>17.820652</td>\n",
              "      <td>48.082552</td>\n",
              "      <td>0.245027</td>\n",
              "      <td>0.793742</td>\n",
              "      <td>24044.762323</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>2017.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>6.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>18.000000</td>\n",
              "      <td>2018.000000</td>\n",
              "      <td>16.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>9.000000</td>\n",
              "      <td>62.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>69.530000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>20824.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>69.000000</td>\n",
              "      <td>2018.000000</td>\n",
              "      <td>27.000000</td>\n",
              "      <td>16.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>14.000000</td>\n",
              "      <td>183.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>94.500000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>41647.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>160.000000</td>\n",
              "      <td>2019.000000</td>\n",
              "      <td>38.000000</td>\n",
              "      <td>23.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>3.000000</td>\n",
              "      <td>2.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>229.000000</td>\n",
              "      <td>270.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>126.000000</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>62470.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>1.000000</td>\n",
              "      <td>737.000000</td>\n",
              "      <td>2019.000000</td>\n",
              "      <td>53.000000</td>\n",
              "      <td>31.000000</td>\n",
              "      <td>19.000000</td>\n",
              "      <td>50.000000</td>\n",
              "      <td>55.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>10.000000</td>\n",
              "      <td>...</td>\n",
              "      <td>26.000000</td>\n",
              "      <td>70.000000</td>\n",
              "      <td>21.000000</td>\n",
              "      <td>535.000000</td>\n",
              "      <td>543.000000</td>\n",
              "      <td>391.000000</td>\n",
              "      <td>508.000000</td>\n",
              "      <td>8.000000</td>\n",
              "      <td>5.000000</td>\n",
              "      <td>83293.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>8 rows × 21 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cafb02c4-28d1-4ed1-b078-5dc0ae11cbcf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-cafb02c4-28d1-4ed1-b078-5dc0ae11cbcf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-cafb02c4-28d1-4ed1-b078-5dc0ae11cbcf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3e0d3a35-ce12-4791-b80e-3119254d79b6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3e0d3a35-ce12-4791-b80e-3119254d79b6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3e0d3a35-ce12-4791-b80e-3119254d79b6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe"
            }
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()['total_of_special_requests']"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 335
        },
        "id": "hBOb3ocbWnFY",
        "outputId": "7df4c090-c643-467a-cd85-ac7325913f92"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "count    83293.000000\n",
              "mean         0.571945\n",
              "std          0.793742\n",
              "min          0.000000\n",
              "25%          0.000000\n",
              "50%          0.000000\n",
              "75%          1.000000\n",
              "max          5.000000\n",
              "Name: total_of_special_requests, dtype: float64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>total_of_special_requests</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>83293.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>0.571945</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>0.793742</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>5.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> float64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.select_dtypes('object').describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "Vu7-HdEWXP1U",
        "outputId": "8a1e477d-9452-451c-efaf-21a107428b57"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                    hotel arrival_date_month  \\\n",
              "count                                               83293              83293   \n",
              "unique                                                 64                 12   \n",
              "top     Renaissance New York Times Square Hotel New Yo...             August   \n",
              "freq                                                 1373               9643   \n",
              "\n",
              "         meal country market_segment distribution_channel reserved_room_type  \\\n",
              "count   83293   82947          83293                83293              83293   \n",
              "unique      5     165              8                    5                 10   \n",
              "top        BB     PRT      Online TA                TA/TO                  A   \n",
              "freq    64424   33952          39445                68368              60062   \n",
              "\n",
              "       assigned_room_type deposit_type customer_type reservation_status  \\\n",
              "count               83293        83293         83293              83293   \n",
              "unique                 11            3             4                  3   \n",
              "top                     A   No Deposit     Transient          Check-Out   \n",
              "freq                51702        72979         62535              52516   \n",
              "\n",
              "       reservation_status_date  \n",
              "count                    83293  \n",
              "unique                     914  \n",
              "top                 2017-10-21  \n",
              "freq                      1024  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6cb35203-7aba-4921-b6dd-d63fe254996c\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>hotel</th>\n",
              "      <th>arrival_date_month</th>\n",
              "      <th>meal</th>\n",
              "      <th>country</th>\n",
              "      <th>market_segment</th>\n",
              "      <th>distribution_channel</th>\n",
              "      <th>reserved_room_type</th>\n",
              "      <th>assigned_room_type</th>\n",
              "      <th>deposit_type</th>\n",
              "      <th>customer_type</th>\n",
              "      <th>reservation_status</th>\n",
              "      <th>reservation_status_date</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>83293</td>\n",
              "      <td>83293</td>\n",
              "      <td>83293</td>\n",
              "      <td>82947</td>\n",
              "      <td>83293</td>\n",
              "      <td>83293</td>\n",
              "      <td>83293</td>\n",
              "      <td>83293</td>\n",
              "      <td>83293</td>\n",
              "      <td>83293</td>\n",
              "      <td>83293</td>\n",
              "      <td>83293</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>unique</th>\n",
              "      <td>64</td>\n",
              "      <td>12</td>\n",
              "      <td>5</td>\n",
              "      <td>165</td>\n",
              "      <td>8</td>\n",
              "      <td>5</td>\n",
              "      <td>10</td>\n",
              "      <td>11</td>\n",
              "      <td>3</td>\n",
              "      <td>4</td>\n",
              "      <td>3</td>\n",
              "      <td>914</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>top</th>\n",
              "      <td>Renaissance New York Times Square Hotel New Yo...</td>\n",
              "      <td>August</td>\n",
              "      <td>BB</td>\n",
              "      <td>PRT</td>\n",
              "      <td>Online TA</td>\n",
              "      <td>TA/TO</td>\n",
              "      <td>A</td>\n",
              "      <td>A</td>\n",
              "      <td>No Deposit</td>\n",
              "      <td>Transient</td>\n",
              "      <td>Check-Out</td>\n",
              "      <td>2017-10-21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>freq</th>\n",
              "      <td>1373</td>\n",
              "      <td>9643</td>\n",
              "      <td>64424</td>\n",
              "      <td>33952</td>\n",
              "      <td>39445</td>\n",
              "      <td>68368</td>\n",
              "      <td>60062</td>\n",
              "      <td>51702</td>\n",
              "      <td>72979</td>\n",
              "      <td>62535</td>\n",
              "      <td>52516</td>\n",
              "      <td>1024</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6cb35203-7aba-4921-b6dd-d63fe254996c')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6cb35203-7aba-4921-b6dd-d63fe254996c button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6cb35203-7aba-4921-b6dd-d63fe254996c');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7c4a3867-8eb9-44ad-8c76-8cd1b3942077\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7c4a3867-8eb9-44ad-8c76-8cd1b3942077')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7c4a3867-8eb9-44ad-8c76-8cd1b3942077 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"hotel\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          64,\n          \"1373\",\n          \"83293\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"arrival_date_month\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          12,\n          \"9643\",\n          \"83293\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"meal\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5,\n          \"64424\",\n          \"83293\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"country\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          165,\n          \"33952\",\n          \"82947\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"market_segment\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          8,\n          \"39445\",\n          \"83293\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"distribution_channel\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          5,\n          \"68368\",\n          \"83293\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reserved_room_type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          10,\n          \"60062\",\n          \"83293\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"assigned_room_type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          11,\n          \"51702\",\n          \"83293\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"deposit_type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"72979\",\n          \"83293\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"customer_type\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          4,\n          \"62535\",\n          \"83293\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reservation_status\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          3,\n          \"52516\",\n          \"83293\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"reservation_status_date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"1970-01-01 00:00:00.000000914\",\n        \"max\": \"2017-10-21 00:00:00\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          914,\n          \"1024\",\n          \"83293\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.displot(df['total_of_special_requests'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 523
        },
        "id": "XpIGnG_5XkMv",
        "outputId": "a0605785-c242-4287-bdde-704438d11ca8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7f1731aed610>"
            ]
          },
          "metadata": {},
          "execution_count": 16
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 500x500 with 1 Axes>"
            ],
            "image/png": "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FQCA68plhfSSJUs0bdo0uVyu88ZCQkL07//+73r++edbrTkAAK5nlxXSH330ke69994Ljo8ZM0Z5eXlfuSkAAHCZIV1WVtbsV6+atGnTRsePH//KTQEAgMsM6RtvvFF79+694PiePXvUrVu3r9wUAAC4zJD+9re/raefflrV1dXnjZ09e1YLFizQd77znVZrDgCA69llfQXrqaee0v/+7//q5ptv1syZMzVgwABJ0v79+5Wenq6Ghgb9v//3/65Io4Ak1dfXO3deazJo0CC1afOVbugGAFa6rH/ZwsLCtH37ds2YMUOpqakyxkiSfHx85Ha7lZ6errCwsCvSKCBJhYWFmp7+ljqERUiSTpUVa0WyFBUV5eXOAKD1XfbpR69evbRp0yZ9/vnnOnTokIwx6t+/v2644YYr0R9wng5hEQq98SZvtwEAV1yL3yO84YYbNGrUqNbsBQAAnKNFP7sbAABceYQ0AACWIqQBALAUIQ0AgKUIaQAALEVIAwBgKUIaAABLEdIAAFiKkAYAwFKENAAAliKkAQCwFCENAIClCGkAACxFSAMAYClCGgAASxHSAABYipAGAMBShDQAAJYipAEAsBQhDQCApbwa0osWLdKoUaPUoUMHde3aVRMmTNCBAwc8aqqrq5WcnKxOnTqpffv2mjhxosrKyjxqiouLlZCQoLZt26pr166aN2+e6uvrPWqys7M1YsQIBQYGql+/fsrIyDivn/T0dPXu3VtBQUGKjY3Vjh07Wv01AwDwZXk1pHNycpScnKz3339fW7ZsUV1dncaMGaMzZ844NXPnztVbb72ldevWKScnR0ePHtV9993njDc0NCghIUG1tbXavn27XnvtNWVkZCgtLc2pKSoqUkJCgkaPHq38/HzNmTNHjzzyiDZv3uzUrFmzRikpKVqwYIF2796tYcOGye12q7y8/OosBgAAX+BjjDHebqLJ8ePH1bVrV+Xk5OiOO+5QZWWlunTpolWrVul73/ueJGn//v0aNGiQcnNzdeutt+rtt9/Wd77zHR09elRhYWGSpBUrVujJJ5/U8ePHFRAQoCeffFIbN27U3r17nWPdf//9qqioUGZmpiQpNjZWo0aN0rJlyyRJjY2N6tmzp2bNmqUf//jHl+y9qqpKISEhqqyslMvlavEaFBQUaN7rHyn0xptU8elh/eJ7wxQVFdXi+a41566PJNYIwDXNqs+kKysrJUkdO3aUJOXl5amurk7x8fFOzcCBAxUREaHc3FxJUm5urqKiopyAliS3262qqirt27fPqTl3jqaapjlqa2uVl5fnUePr66v4+Hin5otqampUVVXlsQEA0JqsCenGxkbNmTNHt99+u4YMGSJJKi0tVUBAgEJDQz1qw8LCVFpa6tScG9BN401jF6upqqrS2bNndeLECTU0NDRb0zTHFy1atEghISHO1rNnz5a9cAAALsCakE5OTtbevXu1evVqb7fypaSmpqqystLZSkpKvN0SAOAa08bbDUjSzJkztWHDBm3btk09evRw9oeHh6u2tlYVFRUeZ9NlZWUKDw93ar54FXbT1d/n1nzxivCysjK5XC4FBwfLz89Pfn5+zdY0zfFFgYGBCgwMbNkLBgDgS/DqmbQxRjNnztT69eu1detW9enTx2M8Ojpa/v7+ysrKcvYdOHBAxcXFiouLkyTFxcWpoKDA4yrsLVu2yOVyKTIy0qk5d46mmqY5AgICFB0d7VHT2NiorKwspwYAgKvNq2fSycnJWrVqld5880116NDB+fw3JCREwcHBCgkJ0dSpU5WSkqKOHTvK5XJp1qxZiouL06233ipJGjNmjCIjI/Xggw9q8eLFKi0t1VNPPaXk5GTnTHf69OlatmyZ5s+fr4cfflhbt27V2rVrtXHjRqeXlJQUJSUlaeTIkYqJidGSJUt05swZTZky5eovDAAA8nJIL1++XJJ01113eexfuXKlJk+eLEl64YUX5Ovrq4kTJ6qmpkZut1svvfSSU+vn56cNGzZoxowZiouLU7t27ZSUlKRnnnnGqenTp482btyouXPnaunSperRo4deffVVud1upyYxMVHHjx9XWlqaSktLNXz4cGVmZp53MRkAAFeLV0P6y3xFOygoSOnp6UpPT79gTa9evbRp06aLznPXXXfpww8/vGjNzJkzNXPmzEv2BADA1WDN1d0AAMATIQ0AgKUIaQAALEVIAwBgKUIaAABLEdIAAFiKkAYAwFKENAAAliKkAQCwFCENAIClCGkAACxFSAMAYClCGgAASxHSAABYipAGAMBShDQAAJYipAEAsBQhDQCApQhpAAAsRUgDAGApQhoAAEsR0gAAWIqQBgDAUoQ0AACWIqQBALAUIQ0AgKUIaQAALEVIAwBgKUIaAABLEdIAAFiKkAYAwFKENAAAliKkAQCwFCENAIClCGkAACxFSAMAYClCGgAASxHSAABYipAGAMBShDQAAJYipAEAsBQhDQCApQhpAAAsRUgDAGApQhoAAEsR0gAAWIqQBgDAUoQ0AACWIqQBALAUIQ0AgKUIaQAALEVIAwBgKUIaAABLEdIAAFiKkAYAwFKENAAAliKkAQCwFCENAIClCGkAACxFSAMAYClCGgAASxHSAABYipAGAMBShDQAAJYipAEAsBQhDQCApQhpAAAsRUgDAGApQhoAAEsR0gAAWIqQBgDAUoQ0AACW8mpIb9u2TePGjVP37t3l4+OjN954w2PcGKO0tDR169ZNwcHBio+P18GDBz1qTp48qUmTJsnlcik0NFRTp07V6dOnPWr27Nmjb37zmwoKClLPnj21ePHi83pZt26dBg4cqKCgIEVFRWnTpk2t/noBALgcXg3pM2fOaNiwYUpPT292fPHixXrxxRe1YsUKffDBB2rXrp3cbreqq6udmkmTJmnfvn3asmWLNmzYoG3btunRRx91xquqqjRmzBj16tVLeXl5+sUvfqGFCxfqlVdecWq2b9+uBx54QFOnTtWHH36oCRMmaMKECdq7d++Ve/EAAFxCG28efOzYsRo7dmyzY8YYLVmyRE899ZTGjx8vSfrNb36jsLAwvfHGG7r//vtVWFiozMxM7dy5UyNHjpQk/fKXv9S3v/1t/fd//7e6d++u3//+96qtrdWvf/1rBQQEaPDgwcrPz9fzzz/vhPnSpUt17733at68eZKkn/3sZ9qyZYuWLVumFStWXIWVAADgfNZ+Jl1UVKTS0lLFx8c7+0JCQhQbG6vc3FxJUm5urkJDQ52AlqT4+Hj5+vrqgw8+cGruuOMOBQQEODVut1sHDhzQ559/7tSce5ymmqbjNKempkZVVVUeGwAArcnakC4tLZUkhYWFeewPCwtzxkpLS9W1a1eP8TZt2qhjx44eNc3Nce4xLlTTNN6cRYsWKSQkxNl69ux5uS8RAICLsjakbZeamqrKykpnKykp8XZLAIBrjLUhHR4eLkkqKyvz2F9WVuaMhYeHq7y83GO8vr5eJ0+e9Khpbo5zj3Ghmqbx5gQGBsrlcnlsAAC0JmtDuk+fPgoPD1dWVpazr6qqSh988IHi4uIkSXFxcaqoqFBeXp5Ts3XrVjU2Nio2Ntap2bZtm+rq6pyaLVu2aMCAAbrhhhucmnOP01TTdBwAALzBqyF9+vRp5efnKz8/X9I/LxbLz89XcXGxfHx8NGfOHP385z/XH//4RxUUFOihhx5S9+7dNWHCBEnSoEGDdO+992ratGnasWOH3nvvPc2cOVP333+/unfvLkn6wQ9+oICAAE2dOlX79u3TmjVrtHTpUqWkpDh9zJ49W5mZmXruuee0f/9+LVy4ULt27dLMmTOv9pIAAODw6lewdu3apdGjRzuPm4IzKSlJGRkZmj9/vs6cOaNHH31UFRUV+sY3vqHMzEwFBQU5z/n973+vmTNn6p577pGvr68mTpyoF1980RkPCQnRO++8o+TkZEVHR6tz585KS0vz+C71bbfdplWrVumpp57ST37yE/Xv319vvPGGhgwZchVWAQCA5vkYY4y3m7gWVFVVKSQkRJWVlV/p8+mCggLNe/0jhd54kyo+PaxffG+YoqKiWrHTr7dz10cSawTgmubVM2kArau+vl6FhYUe+wYNGqQ2bfirDnwd8TcXuIYUFhZqevpb6hAWIUk6VVasFcninQbga4qQBq4xHcIinI8DAHy9WfsVLAAArneENAAAliKkAQCwFCENAIClCGkAACxFSAMAYClCGgAASxHSAABYipAGAMBShDQAAJYipAEAsBQhDQCApQhpAAAsRUgDAGApQhoAAEsR0gAAWIqQBgDAUoQ0AACWIqQBALAUIQ0AgKUIaQAALEVIAwBgKUIaAABLEdIAAFiKkAYAwFKENAAAliKkAQCwFCENAIClCGkAACxFSAMAYClCGgAASxHSAABYipAGAMBShDQAAJYipAEAsBQhDQCApQhpAAAsRUgDAGApQhoAAEsR0gAAWIqQBgDAUoQ0AACWIqQBALAUIQ0AgKUIaQAALEVIAwBgKUIaAABLEdIAAFiKkAYAwFKENAAAliKkAQCwFCENAIClCGkAACxFSAMAYClCGgAASxHSAABYipAGAMBSbbzdAABcTfX19SosLHQeDxo0SG3a8E8h7MSfTADXlcLCQk1Pf0sdwiJ0qqxYK5KlqKgob7cFNIuQBnDd6RAWodAbb/J2G8Al8Zk0AACWIqQBALAUIQ0AgKUIaQAALEVIAwBgKUIaAABLEdIAAFiKkAYAwFKENAAAliKkvyA9PV29e/dWUFCQYmNjtWPHDm+3BAC4ThHS51izZo1SUlK0YMEC7d69W8OGDZPb7VZ5ebm3WwOAq6K+vl4FBQXOVl9f7+2WrmuE9Dmef/55TZs2TVOmTFFkZKRWrFihtm3b6te//rW3WwOAq6LpBiTzXv9I09Pf8rhj2PXKm/9x4QYb/1JbW6u8vDylpqY6+3x9fRUfH6/c3Nzz6mtqalRTU+M8rqyslCRVVVV9pT5Onz6tz0s+UX3NWZ0qL1F+vtHp06e/0pzXkkOHDunzkoOqrzkrSazRF7A+l3buGrE+5zt06JDqa6tVX3NW9bXVys/Pv+7X59ChQ/qvtdkKvqGrzn5erv/5ySMaPHhwq8zdoUMH+fj4XLjAwBhjzKeffmokme3bt3vsnzdvnomJiTmvfsGCBUYSGxsbGxtbi7fKysqLZhNn0i2UmpqqlJQU53FjY6NOnjypTp06Xfx/RZdQVVWlnj17qqSkRC6XqzVavaawPhfH+lwaa3RxrM/Ftfb6dOjQ4aLjhPS/dO7cWX5+fiorK/PYX1ZWpvDw8PPqAwMDFRgY6LEvNDS01fpxuVz8BbkI1ufiWJ9LY40ujvW5uKu1Plw49i8BAQGKjo5WVlaWs6+xsVFZWVmKi4vzYmcAgOsVZ9LnSElJUVJSkkaOHKmYmBgtWbJEZ86c0ZQpU7zdGgDgOkRInyMxMVHHjx9XWlqaSktLNXz4cGVmZiosLOyq9RAYGKgFCxac91Y6/on1uTjW59JYo4tjfS7uaq+PjzHGXJUjAQCAy8Jn0gAAWIqQBgDAUoQ0AACWIqQBALAUIW0ZbpXZvG3btmncuHHq3r27fHx89MYbb3i7JassWrRIo0aNUocOHdS1a1dNmDBBBw4c8HZb1li+fLmGDh3q/ACKuLg4vf32295uy1rPPvusfHx8NGfOHG+3Yo2FCxfKx8fHYxs4cOAVPy4hbRFulXlhZ86c0bBhw5Senu7tVqyUk5Oj5ORkvf/++9qyZYvq6uo0ZswYnTlzxtutWaFHjx569tlnlZeXp127dunuu+/W+PHjtW/fPm+3Zp2dO3fq5Zdf1tChQ73dinUGDx6sY8eOOdtf/vKXK3/QVrxHBb6imJgYk5yc7DxuaGgw3bt3N4sWLfJiV/aRZNavX+/tNqxWXl5uJJmcnBxvt2KtG264wbz66qvebsMqp06dMv379zdbtmwxd955p5k9e7a3W7LGggULzLBhw676cTmTtkTTrTLj4+OdfRe7VSZwMU23Tu3YsaOXO7FPQ0ODVq9erTNnzvAjf78gOTlZCQkJHv8O4f8cPHhQ3bt3V9++fTVp0iQVFxdf8WPyE8csceLECTU0NJz3083CwsK0f/9+L3WFr6PGxkbNmTNHt99+u4YMGeLtdqxRUFCguLg4VVdXq3379lq/fr0iIyO93ZY1Vq9erd27d2vnzp3ebsVKsbGxysjI0IABA3Ts2DH99Kc/1Te/+U3t3bv3kney+ioIaeAak5ycrL17916dz8u+RgYMGKD8/HxVVlbq9ddfV1JSknJycghqSSUlJZo9e7a2bNmioKAgb7djpbFjxzq/Hjp0qGJjY9WrVy+tXbtWU6dOvWLHJaQtcbm3ygSaM3PmTG3YsEHbtm1Tjx49vN2OVQICAtSvXz9JUnR0tHbu3KmlS5fq5Zdf9nJn3peXl6fy8nKNGDHC2dfQ0KBt27Zp2bJlqqmpkZ+fnxc7tE9oaKhuvvlmHTp06Ioeh8+kLcGtMvFVGGM0c+ZMrV+/Xlu3blWfPn283ZL1GhsbVVNT4+02rHDPPfeooKBA+fn5zjZy5EhNmjRJ+fn5BHQzTp8+rcOHD6tbt25X9DicSVuEW2Ve2OnTpz3+x1pUVKT8/Hx17NhRERERXuzMDsnJyVq1apXefPNNdejQQaWlpZKkkJAQBQcHe7k770tNTdXYsWMVERGhU6dOadWqVcrOztbmzZu93ZoVOnTocN71C+3atVOnTp24ruFffvSjH2ncuHHq1auXjh49qgULFsjPz08PPPDAFT0uIW0RG26Vaatdu3Zp9OjRzuOUlBRJUlJSkjIyMrzUlT2WL18uSbrrrrs89q9cuVKTJ0+++g1Zpry8XA899JCOHTumkJAQDR06VJs3b9a3vvUtb7eGr4m///3veuCBB/TZZ5+pS5cu+sY3vqH3339fXbp0uaLH5VaVAABYis+kAQCwFCENAIClCGkAACxFSAMAYClCGgAASxHSAABYipAGAMBShDQAAJYipAEvmTx5siZMmNBq87333nuKioqSv79/q857JRw5ckQ+Pj7Kz8//0s9p7fUCvg4IaeAcd911l+bMmXPFn3MlpKSkaPjw4SoqKrL+R6X27NlTx44d4+dCN2PhwoUaPny4t9uAJQhp4Bpx+PBh3X333erRo4dCQ0O93c5F+fn5KTw8XG3aXJ3bB9TW1l6V4wCtjZAG/mXy5MnKycnR0qVL5ePjIx8fHx05ckQ5OTmKiYlRYGCgunXrph//+Meqr6+/6HMaGho0depU9enTR8HBwRowYICWLl3a4t5qamr0+OOPq2vXrgoKCtI3vvEN7dy5U9L/vXX82Wef6eGHH5aPj88lz6Q///xzTZo0SV26dFFwcLD69++vlStXesy3evVq3XbbbQoKCtKQIUOUk5PjMcfevXs1duxYtW/fXmFhYXrwwQd14sQJZ7yxsVGLFy9Wv379FBgYqIiICP3Hf/yHxzGa3u5u7fW66667NHPmTM2ZM0edO3eW2+3+Uj2fOXNGDz30kNq3b69u3brpueeeO++dEh8fH73xxhsexwsNDfVY85KSEn3/+99XaGioOnbsqPHjx+vIkSPOeHZ2tmJiYtSuXTuFhobq9ttv19/+9jdlZGTopz/9qT766CPnz1NGRoaMMVq4cKEiIiIUGBio7t276/HHH2/x+uDrg5AG/mXp0qWKi4vTtGnTdOzYMR07dkz+/v769re/rVGjRumjjz7S8uXL9atf/Uo///nPL/icnj17qrGxUT169NC6dev08ccfKy0tTT/5yU+0du3aFvU2f/58/eEPf9Brr72m3bt3q1+/fnK73Tp58qTz1rHL5dKSJUt07NgxJSYmXnS+p59+Wh9//LHefvttFRYWavny5ercubNHzbx58/TEE0/oww8/VFxcnMaNG6fPPvtMklRRUaG7775bt9xyi3bt2qXMzEyVlZXp+9//vvP81NRUPfvss86xVq1adcE7urX2eknSa6+9poCAAL333ntasWLFl+p53rx5ysnJ0Ztvvql33nlH2dnZ2r1792Udt66uTm63Wx06dNCf//xnvffee2rfvr3uvfde1dbWqr6+XhMmTNCdd96pPXv2KDc3V48++qh8fHyUmJioJ554QoMHD3b+PCUmJuoPf/iDXnjhBb388ss6ePCg3njjDUVFRbV4bfA1YgA47rzzTjN79mzn8U9+8hMzYMAA09jY6OxLT0837du3Nw0NDc0+50KSk5PNxIkTncdJSUlm/Pjxl3ze6dOnjb+/v/n973/v7KutrTXdu3c3ixcvdvaFhISYlStXXnI+Y4wZN26cmTJlSrNjRUVFRpJ59tlnnX11dXWmR48e5r/+67+MMcb87Gc/M2PGjPF4XklJiZFkDhw4YKqqqkxg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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['total_of_special_requests'].value_counts().reset_index()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "7SlLD-sVYOxu",
        "outputId": "9e481790-82c4-4b91-a129-4bcf9935c6d6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   total_of_special_requests  count\n",
              "0                          0  49035\n",
              "1                          1  23200\n",
              "2                          2   9041\n",
              "3                          3   1743\n",
              "4                          4    242\n",
              "5                          5     32"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-5841edfb-0830-4482-92c9-b3d8ef17de00\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>total_of_special_requests</th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>49035</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>23200</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2</td>\n",
              "      <td>9041</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>3</td>\n",
              "      <td>1743</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>242</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>5</td>\n",
              "      <td>32</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5841edfb-0830-4482-92c9-b3d8ef17de00')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-5841edfb-0830-4482-92c9-b3d8ef17de00 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-5841edfb-0830-4482-92c9-b3d8ef17de00');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ac720a6b-b178-42ed-90c6-db7afa970e48\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ac720a6b-b178-42ed-90c6-db7afa970e48')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ac720a6b-b178-42ed-90c6-db7afa970e48 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df['total_of_special_requests']\",\n  \"rows\": 6,\n  \"fields\": [\n    {\n      \"column\": \"total_of_special_requests\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 5,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          0,\n          1,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19345,\n        \"min\": 32,\n        \"max\": 49035,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          49035,\n          23200,\n          32\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 17
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "count_total_of_special_requests = df['total_of_special_requests'].value_counts().reset_index()\n",
        "count_total_of_special_requests.columns = ['total_of_special_requests', 'count'] #karena terjadi eror maka harus dijabarkan satu pertsatu"
      ],
      "metadata": {
        "id": "jYGi_hL1Ylwr"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "sns.barplot(x=count_total_of_special_requests['total_of_special_requests'],\n",
        "            y=count_total_of_special_requests['count'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "nEDB09VMY-yS",
        "outputId": "e0d4c5a2-5c71-4594-a17d-80c39a7cfc94"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='total_of_special_requests', ylabel='count'>"
            ]
          },
          "metadata": {},
          "execution_count": 25
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sns.boxplot(df['total_of_special_requests'])"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 428
        },
        "id": "hbAxedyKRQ-X",
        "outputId": "719df2ee-a261-470e-ddd6-8b429dba1f46"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: ylabel='total_of_special_requests'>"
            ]
          },
          "metadata": {},
          "execution_count": 26
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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AQAALslWUVmxYkWV799///22wgAAAJzL1tTPudvmS2eepvzTTz8FdqbNz893LGBVmPoBAKDhqfMt9E+cOFHhVVRUpG+//VY33nijXnvtNVuhAQAAzmf7WT/n69ixo9LT0zVx4kSnbgkAAIKcY0VFOrPA9vDhw07eEgAABDFbi2nXrFlT4djv9ysvL0/z5s1Tv379HAkGAABgq6jccccdFY4ty1KLFi00cOBA/f3vf3ciFwAAgL2iUl5e7nQOAACAShxdowIAAOAkWyMqKSkp1b52zpw5dj4CAADAXlHZvn27tm/frtLSUnXu3FmStG/fPoWGhqpnz56B6yzLciYlAAAISraKym233abo6Gi9/PLLgV1qT5w4oeTkZPXv31+PP/64oyEBAEBwsrWF/jXXXKO1a9eqa9euFc5//fXXuummm+ptLxW20AcAoOGp8y30fT6fjh07Vun8sWPHVFhYaOeWAAAAldgqKiNGjFBycrJWr16t3Nxc5ebm6s0339TYsWM1cuRIpzMCAIAgZWuNysKFC/XEE0/onnvuUWlp6ZkbhYVp7Nix+utf/+poQAAAELxsrVE5q7i4WN99950kKT4+XpdddpljwaqDNSoAADQ8db5G5ay8vDzl5eWpY8eOuuyyy1SLzgMAAFCJramf48eP66677tKGDRtkWZb279+vDh06aOzYsbryyit53g+AWklKSqp0LjMzs95zAHCfrRGVyZMnq0mTJsrOzlZUVFTg/KhRo5SRkVHt+yxYsEDdu3dXTEyMYmJi1KdPH73//vt2IgFoJC5UUqo6D6Bxs1VU1q5dq1mzZqlNmzYVznfs2FGHDh2q9n3atGmj9PR0bd26VVu2bNHAgQN1++23a/fu3XZiAWjgLlVGKCtA8LE19VNcXFxhJOWs/Px8RUREVPs+t912W4XjmTNnasGCBdq8eXOlzeQANG7nl5Bzp3rOfS8pKYlpICCI2BpR6d+/v1asWBE4tixL5eXlmj17tgYMGGArSFlZmVauXKni4mL16dPngteUlJTI5/NVeAFofM4vIhQTIHjZGlGZPXu2Bg0apC1btujUqVOaMmWKdu/erfz8fH322Wc1uteuXbvUp08f/fzzz7r88sv11ltvqUuXLhe8Ni0tTTNmzLATGQAANEC2RlS6deumffv26cYbb9Ttt9+u4uJijRw5Utu3b1d8fHyN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G75V17hx4/TMM8+oefPmF3w/LS1Nq1ev1jfffKOmTZuqb9++mjVrljp37lyt+7PhGwAADU+dP5Swul555RX5fL6Lvv/xxx9r/Pjx2rx5s9atW6fS0lLddNNNKi4urstYAACggbC1RqW6LjVYk5GRUeF4+fLlatmypbZu3apf/epXdRkNAAA0AHVaVGqqoKBAknTVVVdd8P2SkhKVlJQEjqsarQHs+Pnnn5Wdne12DMBIbdu2VWRkpNsxEGSMKSrl5eWaNGmS+vXrp27dul3wmrS0NM2YMaOekyGYZGdn6+GHH3Y7BmCkxYsXq1OnTm7HQJCp08W00dHR+ve//60OHTpc8tpHH31U77//vj799FO1adPmgtdcaETF6/WymBaOYUTFHIcOHdLMmTM1depUni9mCEZU4JQ6f3qy0x577DG988472rhx40VLiiRFREQoIiKiHpMh2ERGRvJfjIaJi4vj3wkQxKr9q5+RI0cG1oSsWLGiwsjGxdx7771VNiW/36/HHntMb731lj766CO1b9++unEAAEAQqHZReeeddwI/G05OTg4sfK3KggULLrqHiiSNHz9er7zyiv75z38qOjpaR44c0ZEjR9iGHwAASKrB1E9CQoJSU1M1YMAA+f1+rVq16qKjJffff3+17rlgwQJJqvQgw2XLlul3v/tddaMBAIBGqtpFZeHChUpJSdG7774ry7L0xz/+UZZlVbrOsqxqF5U6XMcLAAAagWoXlb59+2rz5s2SpJCQEO3bt08tW7ass2AAAAC2ttDPyspSixYtnM4CAABQga2fJ8fFxenkyZNasmSJ9u7dK0nq0qWLxo4dK4/H42hAAAAQvGyNqGzZskXx8fF69tlnlZ+fr/z8fD377LOKj4/Xtm3bnM4IAACClK0RlcmTJ2v48OF66aWXFBZ25hanT5/Wgw8+qEmTJmnjxo2OhgQAAMHJVlHZsmVLhZIiSWFhYZoyZYp69erlWDgAABDcbE39xMTEXPB5KDk5OYqOjq51KAAAAMlmURk1apTGjh2r119/XTk5OcrJydHKlSv14IMPavTo0U5nBAAAQcrW1M/f/va3wMZup0+fliQ1adJEjz76qNLT0x0NCAAAgpetohIeHq7nn39eaWlp+u677yRJ8fHxioqKqnBdbm6uYmNjFRJia+AGAAAEOVtF5ayoqChde+21F32/S5cu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\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "set_mean = df['total_of_special_requests'].mean()\n",
        "set_median = df['total_of_special_requests'].median()\n",
        "set_mode = df['total_of_special_requests'].mode()"
      ],
      "metadata": {
        "id": "Q_sh8gUNSx5s"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print('mean', set_mean)\n",
        "print('median', set_median)\n",
        "print('mode', set_mode)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vmUTHQndTN0s",
        "outputId": "b730fda2-e8d3-4c47-f0bb-a20285e6769f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "mean 0.5719448212935061\n",
            "median 0.0\n",
            "mode 0    0\n",
            "Name: total_of_special_requests, dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "q1 = df['total_of_special_requests'].quantile(0.25)\n",
        "q3 = df['total_of_special_requests'].quantile(0.5)\n",
        "IQR = q3-q1"
      ],
      "metadata": {
        "id": "hrSIm8dKUGdI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "batas_atas = q3 + 1.5*IQR\n",
        "batas_bawah = q1 - 1.5*IQR"
      ],
      "metadata": {
        "id": "sU_wZxexURH0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_clean = df[(df['total_of_special_requests']>=batas_bawah)&(df['total_of_special_requests']<=batas_atas)]"
      ],
      "metadata": {
        "id": "4PjzlxK9UugS"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(df_clean)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "mmtPKelKVKdZ",
        "outputId": "3f0cd7b1-d4ff-4bd6-a9a1-3bf51b54c661"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                                                   hotel  is_canceled  \\\n",
            "0                        Crystal Cove, Barbados Barbados            0   \n",
            "1                    Greensboro Courtyard Greensboro, NC            1   \n",
            "2       The Westin Peachtree Plaza, Atlanta Atlanta, GA             1   \n",
            "3      Courtyard by Marriott Aberdeen Airport Aberdee...            0   \n",
            "5      Hotel Maria Cristina, San Sebastian San Sebast...            1   \n",
            "...                                                  ...          ...   \n",
            "83277  Residence Inn Rio de Janeiro Barra da Tijuca B...            1   \n",
            "83283      Albuquerque Airport Courtyard Albuquerque, NM            1   \n",
            "83284             W New York – Union Square New York, NY            0   \n",
            "83285  Baton Rouge Acadian Centre/LSU Area Courtyard ...            0   \n",
            "83292                  Las Vegas Marriott Las Vegas, NV             0   \n",
            "\n",
            "       lead_time  arrival_date_year arrival_date_month  \\\n",
            "0              8               2019            January   \n",
            "1            524               2018           December   \n",
            "2            175               2019                May   \n",
            "3              0               2018            October   \n",
            "5            395               2018              March   \n",
            "...          ...                ...                ...   \n",
            "83277        292               2017             August   \n",
            "83283         68               2017          September   \n",
            "83284         37               2017             August   \n",
            "83285         30               2018              March   \n",
            "83292        290               2018            October   \n",
            "\n",
            "       arrival_date_week_number  arrival_date_day_of_month  \\\n",
            "0                             2                         10   \n",
            "1                            51                         15   \n",
            "2                            20                         19   \n",
            "3                            43                         17   \n",
            "5                            13                         21   \n",
            "...                         ...                        ...   \n",
            "83277                        32                          5   \n",
            "83283                        37                         12   \n",
            "83284                        34                         16   \n",
            "83285                        11                         11   \n",
            "83292                        43                         20   \n",
            "\n",
            "       stays_in_weekend_nights  stays_in_week_nights  adults  ...  agent  \\\n",
            "0                            0                     4       2  ...  314.0   \n",
            "1                            0                     2       2  ...    1.0   \n",
            "2                            1                     2       2  ...   12.0   \n",
            "3                            1                     0       1  ...    NaN   \n",
            "5                            1                     2       2  ...    1.0   \n",
            "...                        ...                   ...     ...  ...    ...   \n",
            "83277                        0                     2       2  ...    1.0   \n",
            "83283                        2                     2       2  ...    1.0   \n",
            "83284                        1                     0       1  ...    NaN   \n",
            "83285                        0                     2       2  ...  196.0   \n",
            "83292                        2                     3       2  ...    9.0   \n",
            "\n",
            "       company days_in_waiting_list    customer_type     adr  \\\n",
            "0          NaN                    0        Transient   38.40   \n",
            "1          NaN                    0        Transient   62.80   \n",
            "2          NaN                    0        Transient  110.00   \n",
            "3        200.0                    0        Transient   45.00   \n",
            "5          NaN                    0        Transient   62.80   \n",
            "...        ...                  ...              ...     ...   \n",
            "83277      NaN                    0  Transient-Party   62.00   \n",
            "83283      NaN                    0  Transient-Party   62.00   \n",
            "83284    307.0                    0  Transient-Party  172.00   \n",
            "83285      NaN                    0        Transient   66.00   \n",
            "83292      NaN                    0  Transient-Party   90.95   \n",
            "\n",
            "      required_car_parking_spaces  total_of_special_requests  \\\n",
            "0                               0                          0   \n",
            "1                               0                          0   \n",
            "2                               0                          0   \n",
            "3                               0                          0   \n",
            "5                               0                          0   \n",
            "...                           ...                        ...   \n",
            "83277                           0                          0   \n",
            "83283                           0                          0   \n",
            "83284                           0                          0   \n",
            "83285                           0                          0   \n",
            "83292                           0                          0   \n",
            "\n",
            "       reservation_status  reservation_status_date bookingID  \n",
            "0               Check-Out               2019-01-14         1  \n",
            "1                Canceled               2017-10-21         2  \n",
            "2                Canceled               2018-11-25         3  \n",
            "3               Check-Out               2018-10-18         4  \n",
            "5                Canceled               2017-08-10         6  \n",
            "...                   ...                      ...       ...  \n",
            "83277            Canceled               2017-07-02     83278  \n",
            "83283            Canceled               2017-09-09     83284  \n",
            "83284           Check-Out               2017-08-17     83285  \n",
            "83285           Check-Out               2018-03-13     83286  \n",
            "83292           Check-Out               2018-10-25     83293  \n",
            "\n",
            "[49035 rows x 33 columns]\n"
          ]
        }
      ]
    }
  ]
}